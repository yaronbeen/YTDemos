import os
from crewai import Agent, Task, Crew, Process

# Set OpenAI API key as an environment variable
os.environ["OPENAI_API_KEY"] = ""

# Define Agents
email_writer_1 = Agent(
    role='Concise Email Writer',
    goal='Write a short and engaging email',
    backstory='Experienced in writing concise marketing emails.',
    verbose=True,
    allow_delegation=False
)

email_writer_2 = Agent(
    role='Technical Email Writer',
    goal='Incorporate technical aspects of the video editing solution',
    backstory='Specializes in explaining technical products in an accessible way.',
    verbose=True,
    allow_delegation=False
)

email_writer_3 = Agent(
    role='Creative Email Writer',
    goal='Add a creative flair to the email',
    backstory='Brings a unique and creative perspective to marketing content.',
    verbose=True,
    allow_delegation=False
)

proofreader = Agent(
    role='Proofreader',
    goal='Ensure grammatical correctness and clarity',
    backstory='Expert in English grammar and clarity in communication.',
    verbose=True,
    allow_delegation=False
)

cold_email_specialist = Agent(
    role='Cold Email Specialist',
    goal='Provide strategic advice for cold emailing',
    backstory='Skilled in creating effective and engaging cold email strategies.',
    verbose=True,
    allow_delegation=False
)

dtc_cmo = Agent(
    role='DTC CMO',
    goal='Lead the team in creating effective cold emails',
    backstory='A CMO who frequently receives marketing emails and knows what stands out.',
    verbose=True,
    allow_delegation=True
)

copywriter = Agent(
    role='Professional Copywriter',
    goal='Critique and refine the email content',
    backstory='A professional copywriter with extensive experience in persuasive writing.',
    verbose=True,
    allow_delegation=False
)

# Define Task
email_task = Task(
    description='''1. Write three variations of a cold email selling a video editing solution.
    2. Critique the written emails for effectiveness and engagement.
    3. Proofread the emails for grammatical correctness and clarity.
    4. Adjust the emails to ensure they meet cold outreach best practices.
    5. Rewrite the emails based on all feedback to create three final versions.''',
    agent=dtc_cmo  # DTC CMO is in charge and can delegate
)

# Create a Single Crew
email_crew = Crew(
    agents=[email_writer_1, email_writer_2, email_writer_3, proofreader, cold_email_specialist, dtc_cmo, copywriter],
    tasks=[email_task],
    verbose=True,
    process=Process.sequential
)

# Execution Flow
print("Crew: Working on Email Task")
final_emails = email_crew.kickoff()
